{"version":3,"sources":["components/ResultList.js","pages/Employees.js","components/SearchForm.js","components/SearchDepartmentContainer.js","pages/SearchDepartment.js","components/SearchRoleContainer.js","pages/SearchRole.js","components/Hero/index.js","pages/About.js","components/SearchResultContainer.js","pages/Search.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["ResultList","props","class","results","map","result","id","employee_name","employee_age","employee_salary","department","role","Employees","state","this","setState","employees","className","Component","SearchForm","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","list","names","key","onClick","handleFormSubmit","SearchDepartmentContainer","departments","searchedDepartment","searchEmployee","query","filter","employee","event","target","preventDefault","apiDepartments","push","Array","from","Set","Search","SearchRoleContainer","roles","searchedRole","apiRoles","Hero","style","backgroundImage","children","About","SearchResultContainer","searchedEmployee","apiNames","Navbar","to","window","location","pathname","Footer","Wrapper","App","exact","path","component","SearchDepartment","SearchRole","ReactDOM","render","document","getElementById"],"mappings":"kmHAuCeA,MAnCf,SAAoBC,GAClB,OAEE,2BAAOC,MAAM,qBACX,+BACE,4BACE,kCACA,oCACA,mCACA,sCACA,0CACA,sCAGJ,+BAEGD,EAAME,QAAQC,KAAI,SAAAC,GAAM,OAEvB,4BACE,4BAAKA,EAAOC,IACZ,4BAAKD,EAAOE,eACZ,4BAAKF,EAAOG,cACZ,4BAAKH,EAAOI,iBACZ,4BAAKJ,EAAOK,YACZ,4BAAKL,EAAOM,aCGTC,E,4MAxBbC,MAAQ,CACNV,QAAS,I,kEAOTW,KAAKC,SAAS,CAAEZ,QAASa,M,+BAOzB,OACE,6BACE,wBAAIC,UAAU,eAAd,iBACA,kBAAC,EAAD,CAAYd,QAASW,KAAKD,MAAMV,e,GAnBhBe,a,QC6BTC,MAjCf,SAAoBlB,GAElB,OAIE,8BACE,yBAAKgB,UAAU,cACb,2BAAOG,QAAQ,UAAf,WACA,2BACEC,SAAUpB,EAAMqB,kBAChBC,MAAOtB,EAAMuB,OACbC,KAAK,SACLC,KAAK,OACLT,UAAU,eACVU,YAAY,SACZrB,GAAG,SACHsB,KAAK,UAER,8BAAUtB,GAAG,SACTL,EAAM4B,MAAMzB,KAAI,SAAAqB,GAAI,OACnB,4BAAQF,MAAOE,EAAMK,IAAKL,QAI9B,4BAAQM,QAAS9B,EAAM+B,iBAAkBf,UAAU,wBAAnD,aCmDOgB,E,4MAvEbpB,MAAQ,CACNW,OAAQ,GACRrB,QAAS,GACT+B,YAAa,GACbC,mBAAoB,I,EA0BtBC,eAAiB,SAAAC,GACf,EAAKtB,SAAS,CAAEoB,mBAAoBnB,EAAUsB,QAAO,SAAAC,GAAQ,OAAIA,EAAS7B,aAAe2B,Q,EAK3Ff,kBAAoB,SAAAkB,GAClB,IAAMf,EAAOe,EAAMC,OAAOhB,KACpBF,EAAQiB,EAAMC,OAAOlB,MAC3B,EAAKR,SAAL,eACGU,EAAOF,K,EAOZS,iBAAmB,SAAAQ,GACjBA,EAAME,iBACN,EAAKN,eAAe,EAAKvB,MAAMW,S,kEAtC/BV,KAAKC,SAAS,CAAEZ,QAASa,IAIzB,IAAI2B,EAAiB,GAErB3B,EAAUZ,KAAI,SAAAmC,GAAQ,OACpBI,EAAeC,KAAKL,EAAS7B,eAM/BI,KAAKC,SAAS,CAAEmB,YAAaW,MAAMC,KAAK,IAAIC,IAAIJ,Q,+BA+BhD,OACE,6BAEE,kBAAC,EAAD,CACEnB,OAAQV,KAAKD,MAAMW,OACnBQ,iBAAkBlB,KAAKkB,iBACvBV,kBAAmBR,KAAKQ,kBACxBO,MAAOf,KAAKD,MAAMqB,cAEpB,kBAAC,EAAD,CAAY/B,QAASW,KAAKD,MAAMsB,0B,GAlEAjB,aCEzB8B,MAJf,WACE,OAAO,kBAAC,EAAD,OCuEMC,E,4MArEbpC,MAAQ,CACNW,OAAQ,GACRrB,QAAS,GACT+C,MAAO,GACPC,aAAc,I,EA0BhBf,eAAiB,SAAAC,GACf,EAAKtB,SAAS,CAAEoC,aAAcnC,EAAUsB,QAAO,SAAAC,GAAQ,OAAIA,EAAS5B,OAAS0B,Q,EAK/Ef,kBAAoB,SAAAkB,GAClB,IAAMf,EAAOe,EAAMC,OAAOhB,KACpBF,EAAQiB,EAAMC,OAAOlB,MAC3B,EAAKR,SAAL,eACGU,EAAOF,K,EAMZS,iBAAmB,SAAAQ,GACjBA,EAAME,iBACN,EAAKN,eAAe,EAAKvB,MAAMW,S,kEArC/BV,KAAKC,SAAS,CAAEZ,QAASa,IAIzB,IAAIoC,EAAW,GAEfpC,EAAUZ,KAAI,SAAAmC,GAAQ,OACpBa,EAASR,KAAKL,EAAS5B,SAMzBG,KAAKC,SAAS,CAAEmC,MAAOL,MAAMC,KAAK,IAAIC,IAAIK,Q,+BA+B1C,OACE,6BACE,kBAAC,EAAD,CACE5B,OAAQV,KAAKD,MAAMW,OACnBQ,iBAAkBlB,KAAKkB,iBACvBV,kBAAmBR,KAAKQ,kBACxBO,MAAOf,KAAKD,MAAMqC,QAEpB,kBAAC,EAAD,CAAY/C,QAASW,KAAKD,MAAMsC,oB,GAhENjC,aCEnB8B,MAJf,WACE,OAAO,kBAAC,EAAD,O,MCOMK,MARf,SAAcpD,GACZ,OACE,yBAAKgB,UAAU,mBAAmBqC,MAAO,CAAEC,gBAAgB,OAAD,OAAStD,EAAMsD,gBAAf,OACvDtD,EAAMuD,WCSEC,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,CAAMF,gBAAgB,yFACpB,kDACA,+DCuEOG,G,kNAvEb7C,MAAQ,CACNW,OAAQ,GACRrB,QAAS,GACT0B,MAAO,GACP8B,iBAAkB,I,EA2BpBvB,eAAiB,SAAAC,GACf,EAAKtB,SAAS,CAAE4C,iBAAkB3C,EAAUsB,QAAO,SAAAC,GAAQ,OAAIA,EAAShC,gBAAkB8B,Q,EAK5Ff,kBAAoB,SAAAkB,GAClB,IAAMf,EAAOe,EAAMC,OAAOhB,KACpBF,EAAQiB,EAAMC,OAAOlB,MAC3B,EAAKR,SAAL,eACGU,EAAOF,K,EAOZS,iBAAmB,SAAAQ,GACjBA,EAAME,iBACN,EAAKN,eAAe,EAAKvB,MAAMW,S,kEAtC/BV,KAAKC,SAAS,CAAEZ,QAASa,IAIzB,IAAI4C,EAAW,GAEf5C,EAAUZ,KAAI,SAAAmC,GAAQ,OACpBqB,EAAShB,KAAKL,EAAShC,kBAMzBO,KAAKC,SAAS,CAAEc,MAAO+B,M,+BAgCvB,OACE,6BACE,kBAAC,EAAD,CACEpC,OAAQV,KAAKD,MAAMW,OACnBQ,iBAAkBlB,KAAKkB,iBACvBV,kBAAmBR,KAAKQ,kBACxBO,MAAOf,KAAKD,MAAMgB,QAEpB,kBAAC,EAAD,CAAY1B,QAASW,KAAKD,MAAM8C,wB,GAlEJzC,cCArB8B,MAJf,WACE,OAAO,kBAAC,EAAD,O,MC0DMa,MA1Df,WACE,OACE,yBAAK5C,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,eAAe6C,GAAG,KAAlC,sBAGA,6BACE,wBAAI7C,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACE6C,GAAG,IACH7C,UAC+B,MAA7B8C,OAAOC,SAASC,UAAiD,WAA7BF,OAAOC,SAASC,SAChD,kBACA,YALR,UAWF,wBAAIhD,UAAU,YACZ,kBAAC,IAAD,CACE6C,GAAG,aACH7C,UAAwC,eAA7B8C,OAAOC,SAASC,SAA4B,kBAAoB,YAF7E,kBAOF,wBAAIhD,UAAU,YACZ,kBAAC,IAAD,CACE6C,GAAG,UACH7C,UAAwC,YAA7B8C,OAAOC,SAASC,SAAyB,kBAAoB,YAF1E,oBAOF,wBAAIhD,UAAU,YACZ,kBAAC,IAAD,CACE6C,GAAG,oBACH7C,UAAwC,sBAA7B8C,OAAOC,SAASC,SAAmC,kBAAoB,YAFpF,yBAOF,wBAAIhD,UAAU,YACZ,kBAAC,IAAD,CACE6C,GAAG,cACH7C,UAAwC,gBAA7B8C,OAAOC,SAASC,SAA6B,kBAAoB,YAF9E,uB,MCvCGC,MARf,WACE,OACE,4BAAQjD,UAAU,UAChB,2D,MCCSkD,MAJf,SAAiBlE,GACf,OAAO,wCAAMgB,UAAU,WAAchB,KC0BxBmE,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,SAASC,UAAWd,IACtC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,aAAaC,UAAW3D,IAC1C,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,UAAUC,UAAWvB,IACvC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,oBAAoBC,UAAWC,IACjD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,cAAcC,UAAWE,KAE7C,kBAAC,EAAD,S,MCnBRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5605e7dc.chunk.js","sourcesContent":["import React from \"react\";\n\n/// Take in the results, which is an array of all employees, and create a table for each employee with all of his or her data.\n \nfunction ResultList(props) {\n  return (\n\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Salary</th>\n          <th>Department</th>\n          <th>Role</th>\n        </tr>\n      </thead>\n      <tbody>\n\n        {props.results.map(result => (\n\n          <tr>\n            <td>{result.id}</td>\n            <td>{result.employee_name}</td>\n            <td>{result.employee_age}</td>\n            <td>{result.employee_salary}</td>\n            <td>{result.department}</td>\n            <td>{result.role}</td>\n          </tr>\n\n        ))}\n\n      </tbody>\n    </table>\n\n  );\n}\n\nexport default ResultList;\n","import React, { Component } from \"react\";\nimport employees from \"../utils/employees\";\nimport ResultList from \"../components/ResultList\";\n\n\n\nclass Employees extends Component {\n  state = {\n    results: []\n  };\n\n  \n \n  componentDidMount() {\n\n    this.setState({ results: employees })\n\n  }\n\n  \n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">All Employees</h1>\n        <ResultList results={this.state.results} />\n      </div>\n    );\n  }\n}\n\nexport default Employees;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n\n  return (\n\n    /*In datalist, show all names of either employees, departments, or roles sent in through props */\n\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"search\"\n          id=\"search\"\n          list=\"names\"\n        />\n       <datalist id=\"names\">\n          {props.names.map(name => (\n            <option value={name} key={name} />\n          ))}\n        </datalist> \n\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport employees from \"../utils/employees\";\n\nclass SearchDepartmentContainer extends Component {\n \n  state = {\n    search: \"\",\n    results: [],\n    departments: [],\n    searchedDepartment: []\n  };\n\n  componentDidMount() {\n\n  // When this component mounts, set the state.results to the array of all employees imported from utils/employees.json\n\n    this.setState({ results: employees })\n  \n  // Push department name for each employee into apiDepartments\n\n    let apiDepartments = [];\n\n    employees.map(employee => (\n      apiDepartments.push(employee.department)\n\n    ))\n\n  // Set state.departments to all unique department names in apiDepartments. In other words, the Array.from removing all name duplicates, so that each department name only appears once.\n\n    this.setState({ departments: Array.from(new Set(apiDepartments)) })\n\n  }\n\n  // Using the query, ie. the department name submitted by the user, filter through the employees array and get us all the data for any employee whose department matches the query.\n\n  searchEmployee = query => {\n    this.setState({ searchedDepartment: employees.filter(employee => employee.department === query) })\n  }\n\n  // Will be used with onChange in SearchForm.js to render datalist results in real time\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  // When the form is submitted, run searchEmployee with the query = `this.state.search`\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployee(this.state.search);\n  };\n\n  render() {\n\n    // Send pertinent info to SearchForm and send the data from the user's searched department to the ResultList component\n    return (\n      <div>\n\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          names={this.state.departments}\n        />\n        <ResultList results={this.state.searchedDepartment} />\n\n      </div>\n    );\n  }\n}\n\nexport default SearchDepartmentContainer;\n","import React, { Component } from \"react\";\nimport SearchDepartmentContainer from \"../components/SearchDepartmentContainer\";\n\nfunction Search() {\n  return <SearchDepartmentContainer />;\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport employees from \"../utils/employees\";\n\nclass SearchRoleContainer extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    roles: [],\n    searchedRole: []\n  };\n\n  componentDidMount() {\n  \n  // When this component mounts, set the state.results to the array of all employees imported from utils/employees.json\n\n    this.setState({ results: employees })\n\n  // Push roles for each employee into apiRoles\n\n    let apiRoles = [];\n\n    employees.map(employee => (\n      apiRoles.push(employee.role)\n\n    ))\n\n  // Set state.roles to all unique role names in apiRoles. In other words, the Array.from removes all duplicates, so that each role only appears once.\n\n    this.setState({ roles: Array.from(new Set(apiRoles)) })\n\n  }\n\n  // Using the query, ie. the role name submitted by the user, filter through the employees array and get us all the data for any employee whose role matches the query.\n\n  searchEmployee = query => {\n    this.setState({ searchedRole: employees.filter(employee => employee.role === query) })\n  }\n\n  // Will be used with onChange in SearchForm.js to render datalist results in real time\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, run searchEmployee with the query = `this.state.search`\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployee(this.state.search);\n  };\n\n  render() {\n\n    // Send pertinent info to SearchForm and send the data from the user's searched role to the ResultList component\n\n    return (\n      <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          names={this.state.roles}\n        />\n        <ResultList results={this.state.searchedRole} />\n      </div>\n    );\n  }\n}\n\nexport default SearchRoleContainer;\n","import React, { Component } from \"react\";\nimport SearchRoleContainer from \"../components/SearchRoleContainer\";\n\nfunction Search() {\n  return <SearchRoleContainer />;\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\n\n\nfunction About() {\n  return (\n    <div>\n      <Hero backgroundImage=\"https://d3timt52sxdbq0.cloudfront.net/wp-content/uploads/2017/04/empoweremployees.jpg\">\n        <h1>Employee Directory</h1>\n        <h2>An employee management tool.</h2>\n      </Hero>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\nimport employees from \"../utils/employees\";\n\n\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    names: [],\n    searchedEmployee: []\n  };\n\n  \n  componentDidMount() {\n\n    // When this component mounts, set the state.results to the array of all employees imported from utils/employees.json\n\n    this.setState({ results: employees })\n\n    // Push employee name for each employee into apiNames\n\n    let apiNames = [];\n\n    employees.map(employee => (\n      apiNames.push(employee.employee_name)\n      \n    ))\n\n    // Set state.names to all the emplyee names in apiNames.\n\n    this.setState({ names: apiNames })\n      \n  }\n\n  // Using the query, ie. the emplyee name submitted by the user, filter through the employees array and get us all the data for any employee whose name matches the query.\n\n  searchEmployee = query => {\n    this.setState({ searchedEmployee: employees.filter(employee => employee.employee_name === query )})\n  }\n\n  // Will be used with onChange in SearchForm.js to render datalist results in real time\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  // When the form is submitted, run searchEmployee with the query = `this.state.search`\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployee(this.state.search);\n  };\n\n  render() {\n\n    // Send pertinent info to SearchForm and send the data from the user's search to the ResultList component\n    \n    return (\n      <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          names={this.state.names}\n        />\n        <ResultList results={this.state.searchedEmployee} />\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","import React, { Component } from \"react\";\nimport SearchResultContainer from \"../components/SearchResultContainer\";\n\n\nfunction Search() {\n  return <SearchResultContainer />;\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Employee Directory\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/about\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              About\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/employees\"\n              className={window.location.pathname === \"/employees\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              All Employees\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/search\"\n              className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Search Employee\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/searchDepartment\"\n              className={window.location.pathname === \"/searchDepartment\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Search by Department\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/searchRole\"\n              className={window.location.pathname === \"/searchRole\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Search by Role\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Employee Directory 2020</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Employees from \"./pages/Employees\";\nimport SearchDepartment from \"./pages/SearchDepartment\";\nimport SearchRole from \"./pages/SearchRole\";\nimport About from \"./pages/About\";\nimport Search from \"./pages/Search\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Wrapper>\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/employees\" component={Employees} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/searchDepartment\" component={SearchDepartment} />\n          <Route exact path=\"/searchRole\" component={SearchRole} />\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}